@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model AdminViewModel

@{
	decimal emailPages = (decimal)Model.TotalEmailCount / 10;
	decimal eventPages = (decimal)Model.TotalEventCount / 10;
	string currentView = ViewData["CurrentView"]?.ToString() ?? "events";
	string currentPage = ViewData["CurrentPage"]?.ToString() ?? "0";
}

@if(User.IsInRole("Admin"))
{
	<div class="flex-grow-1" id="adminBackground">

		<div class="row mt-2 mb-4 border-bottom border-secondary pb-2">
			<h2 class="col-6">Database</h2>
			<div class="col-6 dropdown-center text-end">
				<button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
					Select data
				</button>
				<ul class="dropdown-menu">
					<li><a class="dropdown-item" id="emailDropdownItem" asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-currentView="emails">Emails</a></li>
					<li><a class="dropdown-item" id="emailDropdownItem" asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-currentView="events">Events</a></li>
				</ul>
			</div>
		</div>

		<input type="hidden" id="currentSort" value="@ViewData["CurrentSort"]" />

		@if(currentView == "emails")
		{
		<div id="emailsContainer">
			<div class="row">
				<h2 class="col-12">Email requests</h2>
			</div>
			<table class="table database-table" id="tblEmails">
				<thead>
					<tr>
							<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["EmailIdSortParam"]" asp-route-currentView="emails">EmailId</a></th>
							<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["CustomerEmailSortParam"]" asp-route-currentView="emails">CustomerEmail</a></th>
							<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["SubjectSortParam"]" asp-route-currentView="emails">Subject</a></th>
							<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["BodySortParam"]" asp-route-currentView="emails">Body</a></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var email in Model.Emails)
					{
						<tr>
							<th scope="row">@email.EmailId</th>
							<td>@email.CustomerEmail</td>
							<td>@email.Subject</td>
							<td>@email.Body</td>
						</tr>
					}
				</tbody>
			</table>
			@if (emailPages > 1)
			{
				<div class="d-flex">
					<nav class="ms-auto" aria-label="Page navigation example">
						<ul class="pagination" id="emailPagination">
							@for (var i = 1; i < emailPages + 1; i++)
							{
								if (i == 1)
								{
										<li class="page-item @(currentPage == i.ToString() ? "active" : "")" style="cursor:pointer;">
											<a id="emailPage_@i" class="page-link" data-page="@i"
											   asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-currentView="emails"
									asp-route-pageNumber="@i">@i</a>
										</li>
								}
								else
								{
										<li class="page-item @(currentPage == i.ToString() ? "active" : "")" style="cursor:pointer;">
											<a id="emailPage_@i" class="page-link" data-page="@i"
									asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-currentView="emails"
									asp-route-pageNumber="@i">@i</a></li>
								}
							}
						</ul>
					</nav>
				</div>
			}
		</div>
		}

		@if(currentView == "events")
		{
		<div id="eventsContainer">
			<div class="row">
				<h2 class="col-6">Events</h2>
				<div class="col-6 text-end">
					<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addEventModal">Add +</button>
				</div>
			</div>

			<div class="modal fade" id="addEventModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addEventModalLabel" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
					<div class="modal-content rounded-2">
						<div class="modal-header">
							<h1 class="modal-title fs-5" id="addEventModalLabel">New event</h1>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<form method="post" asp-controller="Admin" asp-action="CreateEvent" role="form" class="mx-auto align-items-center w-100" enctype="multipart/form-data">
							<div class="modal-body">
								<div class="form-control">
									<div asp-validation-summary="ModelOnly" class="text-danger"></div>

									<div class="form-group">
										<div class="mb-3">
											<label for="DateInputValue">Date</label>
											<input asp-for=@Model.newEvent.Date type="datetime-local" class="form-control" id="DateInputValue" value="" min="@DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")">
											<span asp-validation-for=@Model.newEvent.Date class="text-danger"></span>
										</div>
									</div>
									<div class="form-group">
										<div class="mb-3">
											<label for="TitleInputValue">Title</label>
											<input asp-for=@Model.newEvent.Title type="text" class="form-control" id="TitleInputValue">
											<span asp-validation-for=@Model.newEvent.Title class="text-danger"></span>
										</div>
									</div>
									<div class="form-group">
										<div class="mb-3">
											<label for="AddressInputValue">Address</label>
											<input asp-for=@Model.newEvent.Address type="text" class="form-control" id="AddressInputValue">
											<span asp-validation-for=@Model.newEvent.Address class="text-danger"></span>
										</div>
									</div>
									<div class="form-group">
										<div class="mb-3">
											<label for="ShortDescriptionInputValue">ShortDescription</label>
											<textarea asp-for=@Model.newEvent.ShortDescription type="text" class="form-control" id="ShortDescriptionInputValue"></textarea>
											<span asp-validation-for=@Model.newEvent.ShortDescription class="text-danger"></span>
										</div>
									</div>
									<div class="form-group">
										<div class="mb-3">
											<label for="LongDescriptionInputValue">LongDescription</label>
											<textarea asp-for=@Model.newEvent.LongDescription type="text" class="form-control" id="LongDescriptionInputValue"></textarea>
											<span asp-validation-for=@Model.newEvent.LongDescription class="text-danger"></span>
										</div>
									</div>
									<div class="form-group">
										<div class="mb-3">
											<label for="ThumbnailUrlInputValue">ThumbnailUrl</label>
											<input asp-for=@Model.newEvent.ThumbnailUrl type="url" class="form-control" id="ThumbnailUrlInputValue">
											<span asp-validation-for=@Model.newEvent.ThumbnailUrl class="text-danger"></span>
										</div>
									</div>
								</div>
							</div>
							<div class="modal-footer">
								<div class="form-group text-end">
									<input type="submit" value="Submit" class="btn btn-primary" />
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>

			<table class="table database-table" id="tblEvents">
				<thead>
					<tr>
						<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["EventIdSortParam"]">EventId</a></th>
						<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["TitleSortParam"]">Title</a></th>
						<th scope="col"><a asp-action="Index" asp-route-sortBy="@ViewData["DateSortParam"]">Date</a></th>
						<th scope="col"></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var upcomingEvent in Model.Events)
					{
						<tr>
							<th scope="row">@upcomingEvent.EventId</th>
							<td><a asp-controller="Find_Us" asp-action="EventDetails" asp-route-id="@upcomingEvent.EventId" class="link-underline-primary" style="color:#0d6efd;">@upcomingEvent.Title</a></td>
							<td>@upcomingEvent.Date</td>
							<td class="text-center">
								<form method="post" asp-controller="Admin" asp-action="DeleteEvent" asp-route-id="@upcomingEvent.EventId" role="form" id="eventDeletionForm">
									<input type="submit" value="delete" style="color: red; text-decoration:underline; background-color:inherit; border:none;"
										   onclick="javascript: return confirm('Are you sure you want to delete this event?')">
								</form>
							</td>
						</tr>
					}
				</tbody>
			</table>
			@if (eventPages > 1)
			{
				<div class="d-flex">
					<nav class="ms-auto" aria-label="Page navigation example">
						<ul class="pagination" id="eventPagination">
							@for (var i = 1; i < eventPages + 1; i++)
							{
								if (i == 1)
								{
										<li class="page-item @(currentPage == i.ToString() ? "active" : "")" style="cursor:pointer;">
											<a id="eventPage_@i" class="page-link" data-page="@i"
											   asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-currentView="events"
											   asp-route-pageNumber="@i">@i</a>
										</li>
								}
								else
								{
										<li class="page-item @(currentPage == i.ToString() ? "active" : "")" style="cursor:pointer;">
											<a id="eventPage_@i" class="page-link" data-page="@i"
											   asp-action="Index" asp-route-sortBy="@ViewData["CurrentSort"]" asp-route-currentView="events"
											   asp-route-pageNumber="@i">@i</a>
										</li>
								}
							}
						</ul>
					</nav>
				</div>
			}
		</div>
		}
	</div>
		
}
else
{
	<div class="alert alert-danger">
		<strong>Error:</strong> You are not authorised to access this page.
	</div>
}
